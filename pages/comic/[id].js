import Head from "next/head";
import Image from "next/image";
import { Header } from "../../components/Header";
import { readFile, readdir, stat } from "fs/promises";
import Link from "next/link";
import { basename } from "path";
import { Layout } from "components/Layout";

export default function Comic({
  id,
  img,
  alt,
  title,
  width,
  height,
  hasPrevious,
  hasNext,
  nextId,
  prevId,
}) {
  return (
    <>
      <Head>
        <title>XKCD</title>
        <meta
          name="Comics for developers"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <section className="max-w-lg mx-auto my-10 border p-10 rounded-xl">
          <h1 className="font-bold mb-5 text-center">{title}</h1>
          <div className="max-h-xs m-auto mb-4">
            <Image
              layout="responsive"
              width={width}
              height={height}
              src={img}
              alt={alt}
            />
          </div>
          <p>{alt}</p>

          <div className="flex justify-between mt-10">
            {hasPrevious && (
              <Link href={`/comic/${prevId}`}>
                <a className="text-gray-600 bg-slate-300 w-28 text-center p-2 rounded-lg">
                  ⬅ Previous
                </a>
              </Link>
            )}
            {hasNext && (
              <Link href={`/comic/${nextId}`}>
                <a className="text-gray-600 w-28 text-center bg-slate-300 p-2 rounded-lg">
                  Next ➡
                </a>
              </Link>
            )}
          </div>
        </section>
      </Layout>
    </>
  );
}

export async function getStaticPaths({ locales }) {
  const files = await readdir("./comics");

  let paths = [];

  locales.forEach((locale) => {
    paths = paths.concat(
      files.map((file) => {
        const id = basename(file, ".json");
        return { params: { id }, locale };
      })
    );
  });

  return {
    paths,
    fallback: false,
  };
}

export async function getStaticProps({ params }) {
  const { id } = params;
  const content = await readFile(`./comics/${id}.json`, "utf8");
  const comic = JSON.parse(content);

  const idNumber = +id;
  const prevId = idNumber - 1;
  const nextId = idNumber + 1;

  const [prevResult, nextResult] = await Promise.allSettled([
    stat(`./comics/${prevId}.json`),
    stat(`./comics/${nextId}.json`),
  ]);

  const hasPrevious = prevResult.status === "fulfilled";
  const hasNext = nextResult.status === "fulfilled";

  /*
  const files = await fs.readdir("./comics");

  const latestComicsfiles = files.slice(-8, files.length);

  const promisesReadFiles = latestComicsfiles.map(async (file) => {
    const content = await fs.readFile(`./comics/${file}`, "utf-8");
    return JSON.parse(content);
  });

  const latestComics = await Promise.all(promisesReadFiles);
  // console.log(latestComics);
  */

  return {
    props: { ...comic, hasPrevious, hasNext, nextId, prevId },
  };
}
